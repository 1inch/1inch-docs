"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[8490],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>u});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),d=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},p=function(t){var e=d(t.components);return n.createElement(s.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,s=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),m=d(a),k=r,u=m["".concat(s,".").concat(k)]||m[k]||c[k]||l;return a?n.createElement(u,i(i({ref:e},p),{},{components:a})):n.createElement(u,i({ref:e},p))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[m]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},14976:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={sidebar_position:5},i="Contract interaction",o={unversionedId:"fusion-swap/becoming-a-resolver/contracts-interaction",id:"fusion-swap/becoming-a-resolver/contracts-interaction",title:"Contract interaction",description:"Deployed contracts",source:"@site/docs/fusion-swap/becoming-a-resolver/contracts-interaction.mdx",sourceDirName:"fusion-swap/becoming-a-resolver",slug:"/fusion-swap/becoming-a-resolver/contracts-interaction",permalink:"/docs/fusion-swap/becoming-a-resolver/contracts-interaction",draft:!1,editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/fusion-swap/becoming-a-resolver/contracts-interaction.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Resolver\u2019s setup script example",permalink:"/docs/fusion-swap/becoming-a-resolver/resolver-setup-script-example"},next:{title:"SDK Overview",permalink:"/docs/fusion-swap/fusion-sdk/for-integrators/sdk-overview"}},s={},d=[{value:"Deployed contracts",id:"deployed-contracts",level:2},{value:"Stake 1inch",id:"stake-1inch",level:3},{value:"2. Register as a Resolver",id:"2-register-as-a-resolver",level:3},{value:"2.1 Register delegation pod",id:"21-register-delegation-pod",level:3},{value:"2.2. Register delegation share token",id:"22-register-delegation-share-token",level:3},{value:"2.4. Delegate resolver\u2019s staking power to self",id:"24-delegate-resolvers-staking-power-to-self",level:3},{value:"2.5. Whitelist resolver",id:"25-whitelist-resolver",level:3},{value:"3. FeeBank",id:"3-feebank",level:3},{value:"4. Resolving",id:"4-resolving",level:3}],p={toc:d},m="wrapper";function c(t){let{components:e,...a}=t;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"contract-interaction"},"Contract interaction"),(0,r.kt)("h2",{id:"deployed-contracts"},"Deployed contracts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Contract"),(0,r.kt)("th",{parentName:"tr",align:null},"Address"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Staking v2"),(0,r.kt)("td",{parentName:"tr",align:null},"st1inch"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0x9A0C8Ff858d273f57072D714bca7411D717501D7"},"0x9A0C8Ff858d273f57072D714bca7411D717501D7"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Staking farm"),(0,r.kt)("td",{parentName:"tr",align:null},"StakingFarmingPod"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0x1A87c0F9CCA2f0926A155640e8958a8A6B0260bE"},"0x1A87c0F9CCA2f0926A155640e8958a8A6B0260bE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Settlement"),(0,r.kt)("td",{parentName:"tr",align:null},"Settlement"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xA88800CD213dA5Ae406ce248380802BD53b47647"},"0xA88800CD213dA5Ae406ce248380802BD53b47647"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Delegation pod"),(0,r.kt)("td",{parentName:"tr",align:null},"PowerPod"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xAccfAc2339e16DC80c50d2fa81b5c2B049B4f947"},"0xAccfAc2339e16DC80c50d2fa81b5c2B049B4f947"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Resolver information"),(0,r.kt)("td",{parentName:"tr",align:null},"ResolverMetadata"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xBF4543819ECede56220bcB1e8C1BBa9Ef290a58a"},"0xBF4543819ECede56220bcB1e8C1BBa9Ef290a58a"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Whitelist"),(0,r.kt)("td",{parentName:"tr",align:null},"WhitelistRegistry"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xcb8308fcB7BC2f84ed1bEa2C016991D34de5cc77"},"0xcb8308fcB7BC2f84ed1bEa2C016991D34de5cc77"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Whitelist info"),(0,r.kt)("td",{parentName:"tr",align:null},"WhitelistHelper"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://etherscan.io/address/0xF779bdde38C39138Dcaf1514B8a6b8a6C165642D"},"0xF779bdde38C39138Dcaf1514B8a6b8a6C165642D"))))),(0,r.kt)("h3",{id:"stake-1inch"},"Stake 1inch"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"st1inch.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0x9A0C8Ff858d273f57072D714bca7411D717501D7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"Staking")))),(0,r.kt)("p",null,"\u2022 deposit(uint256 amount, uint256 duration)\n\u2022 depositWithPermit(uint256 amount, uint256 duration, bytes calldata permit)\n\u2022 depositFor(address account, uint256 amount, uint256 duration)\n\u2022 depositForWithPermit(address account, uint256 amount, uint256 duration, bytes calldata permit) |\n| Description | Stakes 1inch to get staking power according to the lock time |"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"//*Deposits 100 1inch with 1 day lock*\nawait st1inch.deposit(ether('100'), time.duration.days('1'));\n")),(0,r.kt)("h3",{id:"2-register-as-a-resolver"},"2. Register as a Resolver"),(0,r.kt)("h3",{id:"21-register-delegation-pod"},"2.1 Register delegation pod"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"PowerPod.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0x9A0C8Ff858d273f57072D714bca7411D717501D7")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"addPod(address pod)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description"),(0,r.kt)("td",{parentName:"tr",align:null},"Register pod usage for the tx sender. Needed for")))),(0,r.kt)("p",null,"\u2022 Resolvers to enable resolver\u2019s and delegated staking power usage for whitelisting\n\u2022 Stakers to enable unicorn power delegation |"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"*// register `delegation` pod usage a `resolver`*\nawait st1inch.connect(resolver).addPod(delegation.address);\n")),(0,r.kt)("h3",{id:"22-register-delegation-share-token"},"2.2. Register delegation share token"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"PowerPod.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0xAccfAc2339e16DC80c50d2fa81b5c2B049B4f947")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"register(string memory name, string memory symbol, uint256 maxUserFarms)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description"),(0,r.kt)("td",{parentName:"tr",align:null},"Creates a resolvers share token to count delegated staked power shares and accrue rewards")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"*// Register resolver's token with name 'resolver token share' and symbol 'RTS'*\nawait delegation.register('resolver token share', 'RTS');\n")),(0,r.kt)("h3",{id:"24-delegate-resolvers-staking-power-to-self"},"2.4. Delegate resolver\u2019s staking power to self"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"PowerPod.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0xDAf782667d98d5069eE7ba139932945C4D08fDE9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"delegate(address delegatee)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description"),(0,r.kt)("td",{parentName:"tr",align:null},"delegate(address delegatee)")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"*// Delegates all staking power to self*\nawait delegation.connect(resolver).delegate(resolver.address);\n")),(0,r.kt)("h3",{id:"25-whitelist-resolver"},"2.5. Whitelist resolver"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"WhitelistRegistry.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0xcb8308fcB7BC2f84ed1bEa2C016991D34de5cc77")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"register()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description"),(0,r.kt)("td",{parentName:"tr",align:null},"Checks if sender is eligible to be whitelisted and put it into the whitelist sorted by staking power descending")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"*// Try to put the sender to the whitelist*\nawait whitelist.connect(resolver).register();\n")),(0,r.kt)("h3",{id:"3-feebank"},"3. FeeBank"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"FeeBank.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0xa0844e046a5B7Db55Bb8DcdFfbF0bBF9c6dc6546")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"\u2022 deposit(uint256 amount)")))),(0,r.kt)("p",null,"\u2022 depositFor(address account, uint256 amount)\n\u2022 depositWithPermit(uint256 amount, bytes calldata permit)\n\u2022 depositForWithPermit |\n| Description | Deposits 1inch for fee deduction when filling orders |"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"*// Deposit fees to fee bank*\nawait feeBank.connect(resolver).deposit(amount)\n")),(0,r.kt)("h3",{id:"4-resolving"},"4. Resolving"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Order {\n        uint256 salt;\n        address makerAsset;\n        address takerAsset;\n        address maker;\n        address receiver;\n        address allowedSender;  // equals to Zero address on public orders\n        uint256 makingAmount;\n        uint256 takingAmount;\n        uint256 offsets;\n        // bytes makerAssetData;\n        // bytes takerAssetData;\n        // bytes getMakingAmount; // this.staticcall(abi.encodePacked(bytes, swapTakerAmount)) => (swapMakerAmount)\n        // bytes getTakingAmount; // this.staticcall(abi.encodePacked(bytes, swapMakerAmount)) => (swapTakerAmount)\n        // bytes predicate;       // this.staticcall(bytes) => (bool)\n        // bytes permit;          // On first fill: permit.1.call(abi.encodePacked(permit.selector, permit.2))\n        // bytes preInteraction;\n        // bytes postInteraction;\n        bytes interactions; // concat(makerAssetData, takerAssetData, getMakingAmount, getTakingAmount, predicate, permit, preIntercation, postInteraction)\n    }\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Repository"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"https://github.com/1inch/limit-order-settlement/"},"limit-order-settlement")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract"),(0,r.kt)("td",{parentName:"tr",align:null},"Settlement.sol")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Contract address"),(0,r.kt)("td",{parentName:"tr",align:null},"0xA88800CD213dA5Ae406ce248380802BD53b47647")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Methods"),(0,r.kt)("td",{parentName:"tr",align:null},".settleOrders(bytes calldata data)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Description"),(0,r.kt)("td",{parentName:"tr",align:null},"Settles an order")))))}c.isMDXComponent=!0}}]);