"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[6515],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>f});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),d=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=d(e.components);return n.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,f=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return t?n.createElement(f,i(i({ref:r},s),{},{components:t})):n.createElement(f,i({ref:r},s))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},44804:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=t(87462),o=(t(67294),t(3905));const a={sidebar_position:6},i="Cancel all limit orders",l={unversionedId:"limit-order-protocol/utils/guide/cancel-all-limit-orders",id:"limit-order-protocol/utils/guide/cancel-all-limit-orders",title:"Cancel all limit orders",description:"LimitOrderProtocolFacade.advanceNonce(count)",source:"@site/docs/limit-order-protocol/utils/guide/cancel-all-limit-orders.md",sourceDirName:"limit-order-protocol/utils/guide",slug:"/limit-order-protocol/utils/guide/cancel-all-limit-orders",permalink:"/docs/limit-order-protocol/utils/guide/cancel-all-limit-orders",draft:!1,editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/utils/guide/cancel-all-limit-orders.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Cancel a limit order",permalink:"/docs/limit-order-protocol/utils/guide/cancel-limit-order"},next:{title:"Nonce",permalink:"/docs/limit-order-protocol/utils/guide/nonce"}},c={},d=[{value:"First of all, read about Nonce",id:"first-of-all-read-about-nonce",level:2},{value:"Example:",id:"example",level:2}],s={toc:d},p="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"cancel-all-limit-orders"},"Cancel all limit orders"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.advanceNonce(count)"),(0,o.kt)("br",{parentName:"p"}),"\n","or",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.increaseNonce()")),(0,o.kt)("h2",{id:"first-of-all-read-about-nonce"},"First of all, read about ",(0,o.kt)("a",{parentName:"h2",href:"#nonce"},"Nonce")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"advanceNonce(count) or increaseNonce()")," increments the nonce and all limit orders with a predicate to the previous nonce value become invalid"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"Warning!"),(0,o.kt)("br",{parentName:"p"}),"\n","The approach only works when all orders have the ",(0,o.kt)("inlineCode",{parentName:"p"},"nonceEquals")," predicate")),(0,o.kt)("h2",{id:"example"},"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderProtocolFacade,\n    Web3ProviderConnector,\n} from '@1inch/limit-order-protocol-utils';\n\nconst walletAddress = '0xhhh...';\nconst contractAddress = '0x5fa31604fc5dcebfcac2481f9fa59d174126e5e6';\n\nconst connector = new Web3ProviderConnector(new Web3('...'));\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(\n    contractAddress,\n    chainId,\n    connector\n);\n\nconst callData = limitOrderProtocolFacade.increaseNonce();\n\nsendTransaction({\n    from: walletAddress,\n    gas: 210_000, // Set your gas limit\n    gasPrice: 40000, // Set your gas price\n    to: contractAddress,\n    data: callData,\n});\n")))}u.isMDXComponent=!0}}]);