"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[9354],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=n.createContext({}),c=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=i,f=u["".concat(d,".").concat(m)]||u[m]||p[m]||a;return r?n.createElement(f,o(o({ref:t},s),{},{components:r})):n.createElement(f,o({ref:t},s))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},94442:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(87462),i=(r(67294),r(3905));const a={sidebar_position:3},o="Filling a RFQ order",l={unversionedId:"limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq",id:"limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq",title:"Filling a RFQ order",description:"A RFQ order can be filled in whole or in part.",source:"@site/docs/limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq.md",sourceDirName:"limit-order-protocol/utils/guide/rfq-limit-orders",slug:"/limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq",permalink:"/docs/limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq",draft:!1,editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/utils/guide/rfq-limit-orders/fill-limit-order-rfq.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Creating an RFQ order",permalink:"/docs/limit-order-protocol/utils/guide/rfq-limit-orders/create-limit-order-rfq"},next:{title:"Canceling a limit order",permalink:"/docs/limit-order-protocol/utils/guide/rfq-limit-orders/cancel-limit-order-rfq"}},d={},c=[{value:"Parameters:",id:"parameters",level:2},{value:"Filling with a typescript/javascript:",id:"filling-with-a-typescriptjavascript",level:2},{value:"Filling via CLI (with arguments):",id:"filling-via-cli-with-arguments",level:2},{value:"Filling via CLI (through prompt):",id:"filling-via-cli-through-prompt",level:2}],s={toc:c},u="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"filling-a-rfq-order"},"Filling a RFQ order"),(0,i.kt)("p",null,"A RFQ order can be filled in whole or in part."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Important! You can fill in a RFQ order only once!")),(0,i.kt)("h2",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"order")),(0,i.kt)("td",{parentName:"tr",align:null},"structure of the RFQ order (see ","[RFQ order structure]"," ( ./docs/limit-order-rfq-structure))")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"signature")),(0,i.kt)("td",{parentName:"tr",align:null},"signature of the typed date of the RFQ order (signTypedData_v4)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"makerAmount")),(0,i.kt)("td",{parentName:"tr",align:null},"the number of maker asset tokens that you want to fill (in token units). For example: 5 DAI = 5000000000000000000 units")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"takerAmount")),(0,i.kt)("td",{parentName:"tr",align:null},"the number of taker asset tokens that you want to fill (in token units). For example: 5 DAI = 5000000000000000000 units")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"important! Only one of the assets amounts can be not zero.\nFor example, if you specified the maker amount, then the taker amount must be zero and vice versa.")),(0,i.kt)("h2",{id:"filling-with-a-typescriptjavascript"},"Filling with a typescript/javascript:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderBuilder,\n    LimitOrderProtocolFacade,\n    RFQOrder,\n    Web3ProviderConnector\n} from '@1inch/limit-order-protocol-utils';\n\nconst contractAddress = '0x7643b8c2457c1f36dc6e3b8f8e112fdf6da7698a';\nconst walletAddress = '0xd337163ef588f2ee7cdd30a3387660019be415c9';\n\nconst web3 = new Web3('...');\n// You can create and use a custom provider connector (for example: ethers)\nconst connector = new Web3ProviderConnector(web3);\n\nconst limitOrderBuilder = new LimitOrderBuilder(\n    contractAddress,\n    chainId,\n    connector\n);\n\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(\n    contractAddress,\n    chainId,\n    connector,\n);\n\nconst RFQorder: RFQOrder = {...};\n\nconst typedData = limitOrderBuilder.buildRFQOrderTypedData(RFQorder);\nconst signature = await limitOrderBuilder.buildOrderSignature(\n    walletAddress,\n    typedData\n);\nconst makerAmount = '1000000000000000000';\nconst takerAmount = '0';\n\nconst callData = limitOrderProtocolFacade.fillRFQOrder(\n    order,\n    signature,\n    makerAmount,\n    takerAmount\n);\n\n// Send transaction for the order RFQ filling\n// Must be implemented\nsendTransaction({\n    from: walletAddress,\n    gas: 150_000, // Set your gas limit\n    gasPrice: 600000000, // Set your gas price\n    to: contractAddress,\n    data: callData,\n});\n")),(0,i.kt)("h2",{id:"filling-via-cli-with-arguments"},"Filling via CLI (with arguments):"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"gasPrice")," - in units of GWEI"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'npx limit-order-rfq-utils --\\\n--operation=fill \\\n--chainId=56 \\\n--privateKey={xxx} \\\n--gasPrice=6 \\\n--order="{ \\\n    \\"info\\": \\"29941961886664662336741887180811\\", \\\n    \\"makerAsset\\": \\"0x111111111117dc0aa78b770fa6a738034120c302\\", \\\n    \\"takerAsset\\": \\"0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3\\", \\\n    \\"makerAssetData\\": \\"0x23b872dd00...000\\", \\\n    \\"takerAssetData\\": \\"0x23b872dd00...000\\" \\\n}" \\\n--makerAmount=1000000000000000000 \\\n--takerAmount=0\n')),(0,i.kt)("h2",{id:"filling-via-cli-through-prompt"},"Filling via CLI (through prompt):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npx limit-order-rfq-utils\n")),(0,i.kt)("p",null,"As result, you will receive a link to the transaction hash."))}p.isMDXComponent=!0}}]);