"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[9340],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,i=function(e,t){if(null==e)return{};var r,o,i={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=o.createContext({}),s=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=i,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||n;return r?o.createElement(h,a(a({ref:t},p),{},{components:r})):o.createElement(h,a({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,a=new Array(n);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<n;s++)a[s]=r[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},57555:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var o=r(87462),i=r(63366),n=(r(67294),r(3905)),a=["components"],l={sidebar_position:1},c="Introduction",s={unversionedId:"limit-order-protocol/introduction",id:"limit-order-protocol/introduction",isDocsHomePage:!1,title:"Introduction",description:"1inch limit order protocol is a set of smart contracts that work on any supported EVM based blockchains.",source:"@site/docs/limit-order-protocol/introduction.mdx",sourceDirName:"limit-order-protocol",slug:"/limit-order-protocol/introduction",permalink:"/docs/limit-order-protocol/introduction",editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/introduction.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"WebSocket API",permalink:"/docs/fusion-swap/fusion-sdk/for-resolvers/websocket-api"},next:{title:"Limit vs. RFQ Orders",permalink:"/docs/limit-order-protocol/types"}},p=[{value:"I. Limit order",id:"i-limit-order",children:[{value:"Limit order execution",id:"limit-order-execution",children:[]}]},{value:"II. RFQ order",id:"ii-rfq-order",children:[]},{value:"Supported tokens",id:"supported-tokens",children:[]},{value:"More resources",id:"more-resources",children:[]}],u={toc:p};function d(e){var t=e.components,r=(0,i.Z)(e,a);return(0,n.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"1inch limit order protocol is a set of smart contracts that work on any ",(0,n.kt)("a",{parentName:"p",href:"https://help.1inch.io/en/articles/5528619-how-to-use-different-networks-on-1inch"},"supported EVM based blockchains"),"."),(0,n.kt)("p",null,"Key features of the protocol are ",(0,n.kt)("strong",{parentName:"p"},"extreme flexibility")," and high ",(0,n.kt)("strong",{parentName:"p"},"gas efficiency")," which are achieved by using two different order types - regular ",(0,n.kt)("em",{parentName:"p"},"Limit Order")," and ",(0,n.kt)("em",{parentName:"p"},"RFQ Order"),"."),(0,n.kt)("p",null,"Smart Contracts allow users to place limit orders and RFQ Orders, that later could be filled on-chain.\nBoth types of orders are data structures created off-chain and signed according to ",(0,n.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-712"},"EIP-712"),"."),(0,n.kt)("h2",{id:"i-limit-order"},"I. Limit order"),(0,n.kt)("p",null,"A limit order is a financial instrument with which you can put up an ERC-20 token for sale at a fixed price.",(0,n.kt)("br",{parentName:"p"}),"\n","For example, you can put up 2 WBTC tokens for sale at the price of 82415 DAI tokens."),(0,n.kt)("p",null,"The 1inch limit order protocol has many tools for flexible trade management:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Partial fill"),(0,n.kt)("li",{parentName:"ul"},"Predicates"),(0,n.kt)("li",{parentName:"ul"},"Single cancellation"),(0,n.kt)("li",{parentName:"ul"},"Bunch cancellation"),(0,n.kt)("li",{parentName:"ul"},"Fullness check"),(0,n.kt)("li",{parentName:"ul"},"Validation")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Note:")," For market-making, there are ",(0,n.kt)("a",{parentName:"p",href:"#ii-rfq-order"},(0,n.kt)("strong",{parentName:"a"},"RFQ orders"))," that have special optimization which does not require a large amount of gas for execution.")),(0,n.kt)("h3",{id:"limit-order-execution"},"Limit order execution"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"1inch users can place their limit orders through the 1inch ",(0,n.kt)("a",{parentName:"li",href:"https://app.1inch.io/#/1/limit-order/WETH/DAI"},"dApp"),"."),(0,n.kt)("li",{parentName:"ol"},"The signed orders placed by the users can be fetched by anyone using the ",(0,n.kt)("a",{parentName:"li",href:"/docs/limit-order-protocol/api"},"1inch Limit Orders Liquidity Source API"),"\nto execute trades by filling the order on-chain."),(0,n.kt)("li",{parentName:"ol"},"To fill a limit order on-chain, you need to pass the signed order to the ",(0,n.kt)("inlineCode",{parentName:"li"},"fillOrder")," method on the contract.\nYou can find the latest contract addresses ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/1inch/limit-order-protocol-utils/blob/master/src/limit-order-protocol.const.ts"},"here"),".",(0,n.kt)("blockquote",{parentName:"li"},(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("em",{parentName:"strong"},"Note:"))," Both the buyer and seller of the assets being traded must approve their assets to be used by the 1inch limit order contract."))),(0,n.kt)("li",{parentName:"ol"},"The Pathfinder algorithm uses the limit orders placed via the 1inch ",(0,n.kt)("inlineCode",{parentName:"li"},"dApp")," and REST API as a liquidity source, making them available for any 1inch\nuser to fill. This integration ensures that 1inch limit orders are available on the DeFi ecosystem from day one.")),(0,n.kt)("h4",{id:"limit-order-features"},"Limit order features"),(0,n.kt)("p",null,"Limit orders are highly flexible and can be configured with the following features:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Order execution predicate: This feature allows you to specify certain conditions to be met before the order can be executed.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"For example, you can set an expiration time based on a certain timestamp or block number."),(0,n.kt)("li",{parentName:"ul"},"You can also construct any predicate you want, such as checking that a certain price is higher than the oracle price,\nto implement stop loss or take profit strategies."))),(0,n.kt)("li",{parentName:"ol"},"Helper function for asset price evaluation.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Function that will allow to extract assets price from arbitrary on-chain source"))),(0,n.kt)("li",{parentName:"ol"},"Callback: For notifying the maker of the order execution.")),(0,n.kt)("h2",{id:"ii-rfq-order"},"II. RFQ order"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"A request for quotation (RFQ)")," is a business process in which a customer requests a quote from a supplier (market-maker) for the purchase of some tokens."),(0,n.kt)("p",null,"RFQ orders have different use cases, and are dedicated to market-makers in the first place. The typical scenario is following:\nMarket-maker creates a bunch of RFQ Orders, and exposes it via the API.\nTrader or the platform algorithm ask for market maker quotes. If the quotes match traders' needs, the trader receives signed RFQ order from the market-maker."),(0,n.kt)("h4",{id:"rfq-order-features"},"RFQ order features"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Gas optimized order")," with restricted capabilities suitable ",(0,n.kt)("strong",{parentName:"p"},"for market-makers")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Supports expiration time"),(0,n.kt)("li",{parentName:"ul"},"Supports cancelation by order id"),(0,n.kt)("li",{parentName:"ul"},"RFQ Order could be filled only once"),(0,n.kt)("li",{parentName:"ul"},"Partial Fill is possible (once)")),(0,n.kt)("h2",{id:"supported-tokens"},"Supported tokens"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ERC 20"),(0,n.kt)("li",{parentName:"ul"},"ERC 721"),(0,n.kt)("li",{parentName:"ul"},"ERC 1155"),(0,n.kt)("li",{parentName:"ul"},"Other token standards could be supported via external extension")),(0,n.kt)("h2",{id:"more-resources"},"More resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You can use Limit Orders within the ",(0,n.kt)("a",{parentName:"li",href:"https://app.1inch.io/#/1/limit-order/WETH/DAI"},"1inch dApp")),(0,n.kt)("li",{parentName:"ul"},"Smart Contracts ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/1inch/limit-order-protocol/"},"repository")),(0,n.kt)("li",{parentName:"ul"},"Utils library ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/1inch/limit-order-protocol-utils/"},"repository"))))}d.isMDXComponent=!0}}]);