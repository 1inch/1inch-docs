"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[8648],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var d=n.createContext({}),m=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(r),u=i,k=c["".concat(d,".").concat(u)]||c[u]||s[u]||a;return r?n.createElement(k,o(o({ref:t},p),{},{components:r})):n.createElement(k,o({ref:t},p))}));function k(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<a;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2541:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>m});var n=r(87462),i=(r(67294),r(3905));const a={sidebar_position:4},o="Fill a limit order",l={unversionedId:"limit-order-protocol/utils/guide/fill-limit-order",id:"limit-order-protocol/utils/guide/fill-limit-order",title:"Fill a limit order",description:"LimitOrderProtocolFacade.fillLimitOrder()",source:"@site/docs/limit-order-protocol/utils/guide/fill-limit-order.md",sourceDirName:"limit-order-protocol/utils/guide",slug:"/limit-order-protocol/utils/guide/fill-limit-order",permalink:"/docs/limit-order-protocol/utils/guide/fill-limit-order",draft:!1,editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/utils/guide/fill-limit-order.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Limit order structure",permalink:"/docs/limit-order-protocol/utils/guide/limit-order-structure"},next:{title:"Cancel a limit order",permalink:"/docs/limit-order-protocol/utils/guide/cancel-limit-order"}},d={},m=[{value:"Parameters:",id:"parameters",level:2},{value:"Note on <code>skipPermit</code>",id:"note-on-skippermit",level:2},{value:"Example",id:"example",level:2}],p={toc:m},c="wrapper";function s(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"fill-a-limit-order"},"Fill a limit order"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"LimitOrderProtocolFacade.fillLimitOrder()")),(0,i.kt)("h2",{id:"parameters"},"Parameters:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Field"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"order")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"LimitOrder")),(0,i.kt)("td",{parentName:"tr",align:null},"a limit order structure. See ",(0,i.kt)("a",{parentName:"td",href:"./limit-order-structure"},"Limit order structure"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"signature")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"LimitOrderSignature")),(0,i.kt)("td",{parentName:"tr",align:null},"signature of a limit order")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"makingAmount")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"amount of maker asset (in token units)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"takingAmount")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"amount of taker asset (in token units)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"thresholdAmount")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:null},"the threshold for the amount of received asset (in received asset units)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"skipPermit")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:null},"Should makers permit be skipped during fill evaluation. See below.")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: to fill a limit order, only one of the amounts must be specified, ",(0,i.kt)("inlineCode",{parentName:"p"},"makingAmount")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"takingAmount"),"."),(0,i.kt)("p",{parentName:"blockquote"},"The second one must be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"0"))),(0,i.kt)("h2",{id:"note-on-skippermit"},"Note on ",(0,i.kt)("inlineCode",{parentName:"h2"},"skipPermit")),(0,i.kt)("p",null,"Since v3 multiple valid orders may exist with same maker permit, while only first fill should evaluate maker's permit."),(0,i.kt)("p",null,"To manage this ",(0,i.kt)("inlineCode",{parentName:"p"},"skipPermit")," option was added."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Tip:")),(0,i.kt)("p",{parentName:"blockquote"},"You can just check if allowance exists and then set ",(0,i.kt)("inlineCode",{parentName:"p"},"skipPermit")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,i.kt)("p",{parentName:"blockquote"},"You can also estimate order with  ",(0,i.kt)("inlineCode",{parentName:"p"},"skipPermit: true")," and fallback to estimation with ",(0,i.kt)("inlineCode",{parentName:"p"},"skipPermit: false")," as well.")),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderProtocolFacade,\n    LimitOrder,\n    LimitOrderSignature,\n    Web3ProviderConnector\n} from '@1inch/limit-order-protocol-utils';\n\nconst walletAddress = '0xhhh...';\nconst contractAddress = '0x5fa31604fc5dcebfcac2481f9fa59d174126e5e6';\n\nconst order: LimitOrder = {...};\nconst signature: LimitOrderSignature = '...';\n\nconst makerAmount = '400000000';\nconst takerAmount = '0';\nconst thresholdAmount = '600000000';\n\nconst connector = new Web3ProviderConnector(new Web3('...'));\nconst limitOrderProtocolFacade = new LimitOrderProtocolFacade(contractAddress, chainId, connector);\n\nconst callData = limitOrderProtocolFacade.fillLimitOrder({\n    order,\n    signature,\n    makingAmount,\n    takingAmount,\n    thresholdAmount,\n\n    // interaction = ZX,\n    // skipPermit = false,\n});\n\nsendTransaction({\n    from: walletAddress,\n    gas: 210_000, // Set your gas limit\n    gasPrice: 40000, // Set your gas price\n    to: contractAddress,\n    data: callData,\n});\n")))}s.isMDXComponent=!0}}]);