"use strict";(self.webpackChunk_1_inch_docs=self.webpackChunk_1_inch_docs||[]).push([[3077],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(r),u=a,k=m["".concat(o,".").concat(u)]||m[u]||p[u]||i;return r?n.createElement(k,d(d({ref:t},c),{},{components:r})):n.createElement(k,d({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,d=new Array(i);d[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:a,d[1]=l;for(var s=2;s<i;s++)d[s]=r[s];return n.createElement.apply(null,d)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},16885:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const i={sidebar_position:3},d="Create a limit order",l={unversionedId:"limit-order-protocol/utils/guide/create-limit-order",id:"limit-order-protocol/utils/guide/create-limit-order",title:"Create a limit order",description:"LimitOrderBuilder.buildLimitOrder()",source:"@site/docs/limit-order-protocol/utils/guide/create-limit-order.md",sourceDirName:"limit-order-protocol/utils/guide",slug:"/limit-order-protocol/utils/guide/create-limit-order",permalink:"/docs/limit-order-protocol/utils/guide/create-limit-order",draft:!1,editUrl:"https://github.com/1inch/1inch-docs/edit/master/docs/limit-order-protocol/utils/guide/create-limit-order.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Quick start",permalink:"/docs/limit-order-protocol/utils/guide/quick-start"},next:{title:"Limit order structure",permalink:"/docs/limit-order-protocol/utils/guide/limit-order-structure"}},o={},s=[{value:"Parameters:",id:"parameters",level:2},{value:"Example:",id:"example",level:2},{value:"Limit order signature",id:"limit-order-signature",level:2}],c={toc:s},m="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-a-limit-order"},"Create a limit order"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"LimitOrderBuilder.buildLimitOrder()")),(0,a.kt)("h2",{id:"parameters"},"Parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Field"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"makerAssetAddress")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"the address of the asset you want to sell (address of a token contract)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"takerAssetAddress")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"the address of the asset you want to buy (address of a token contract)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"makerAddress")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"an address of the maker (wallet address)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"takerAddress")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string?")),(0,a.kt)("td",{parentName:"tr",align:null},"by default contains a zero address, which means that a limit order is available for everyone to fill. If you set a value, then the limit order will be available for execution only for the specified address (private limit order)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"reciever")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string?")),(0,a.kt)("td",{parentName:"tr",align:null},"by default contains a zero address, which means that taker asset will be sent to the address of the creator of the limit order. If you set a value, then taker asset will be sent to the specified address")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"makingAmount")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"the number of maker asset tokens that you want to sell (in token units). For example: 5 DAI = 5000000000000000000 units")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"takingAmount")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string")),(0,a.kt)("td",{parentName:"tr",align:null},"the number of taker asset tokens that you want to receive for selling the maker asset (in token units). For example: 5 DAI = 5000000000000000000 units")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"predicate")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string?")),(0,a.kt)("td",{parentName:"tr",align:null},"a predicate call data. Default: ",(0,a.kt)("inlineCode",{parentName:"td"},"0x"),". See ",(0,a.kt)("a",{parentName:"td",href:"./predicate"},"Predicate docs"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"permit")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string?")),(0,a.kt)("td",{parentName:"tr",align:null},"a permit (",(0,a.kt)("inlineCode",{parentName:"td"},"EIP-2612"),") call data. Could be built using ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/1inch/permit-signed-approvals-utils"},"utility library"),". Default: ",(0,a.kt)("inlineCode",{parentName:"td"},"0x"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"interaction")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"string?")),(0,a.kt)("td",{parentName:"tr",align:null},"a call data for InteractiveNotificationReceiver. See more ",(0,a.kt)("a",{parentName:"td",href:"./interactive-receiver"},"Interaction receiver docs"),". Default: ",(0,a.kt)("inlineCode",{parentName:"td"},"0x"))))),(0,a.kt)("h2",{id:"example"},"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import Web3 from 'web3';\nimport {\n    LimitOrderBuilder,\n    Web3ProviderConnector,\n} from '@1inch/limit-order-protocol-utils';\n\nconst contractAddress = '0x7643b8c2457c1f36dc6e3b8f8e112fdf6da7698a';\nconst walletAddress = '0xd337163ef588f2ee7cdd30a3387660019be415c9';\nconst chainId = 1;\n\nconst web3 = new Web3('...');\n// You can create and use a custom provider connector (for example: ethers)\nconst connector = new Web3ProviderConnector(web3);\n\nconst limitOrderBuilder = new LimitOrderBuilder(\n    contractAddress,\n    chainId,\n    connector\n);\n\n// ...\n\nconst limitOrder = limitOrderBuilder.buildLimitOrder({\n    makerAssetAddress: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    takerAssetAddress: '0x111111111117dc0aa78b770fa6a738034120c302',\n    makerAddress: '0xfb3c7ebccccAA12B5A884d612393969Adddddddd',\n    makingAmount: '100',\n    takingAmount: '200',\n    // predicate = '0x',\n    // permit = '0x',\n    // receiver = ZERO_ADDRESS,\n    // allowedSender = ZERO_ADDRESS,\n    // getMakingAmount = ZERO_ADDRESS,\n    // getTakingAmount = ZERO_ADDRESS,\n    // preInteraction  = '0x',\n    // postInteraction = '0x',\n});\nconst limitOrderTypedData = limitOrderBuilder.buildLimitOrderTypedData(\n    limitOrder\n);\nconst limitOrderSignature = limitOrderBuilder.buildOrderSignature(\n    walletAddress,\n    limitOrderTypedData\n);\nconst limitOrderHash = limitOrderBuilder.buildLimitOrderHash(\n    limitOrderTypedData\n);\n")),(0,a.kt)("p",null,"As result you will receive a structure of ",(0,a.kt)("a",{parentName:"p",href:"./limit-order-structure"},"limit order"),". Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "salt": "741670577637",\n    "makerAsset": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",\n    "takerAsset": "0x6b175474e89094c44da98b954eedeac495271d0f",\n    "maker": "0xfb3c7ebccccAA12B5A884d612393969Adddddddd",\n    "receiver": "0x0000000000000000000000000000000000000000",\n    "allowedSender": "0x0000000000000000000000000000000000000000",\n    "makingAmount": "100",\n    "takingAmount": "200",\n    "offsets": "3666552747586172848286066858439618331958618072439065963670861217005568",\n    "interactions": "0x20b83f2d000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000c87e2d2183000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000c8"\n}\n')),(0,a.kt)("h2",{id:"limit-order-signature"},"Limit order signature"),(0,a.kt)("p",null,"To fill a limit order, you need a typed data structure signature.",(0,a.kt)("br",{parentName:"p"}),"\n","You can create a signature following the example above."),(0,a.kt)("p",null,"But the example uses ",(0,a.kt)("inlineCode",{parentName:"p"},"Web3ProviderConnector")," which is designed to work with a wallet.",(0,a.kt)("br",{parentName:"p"}),"\n","If you need to get the signature on the server side, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"PrivateKeyProviderConnector")," and get the signature using the private key."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const walletAddress = '0xd337163ef588f2ee7cdd30a3387660019be415c9';\n\nconst privateKey =\n    'd8d1f95deb28949ea0ecc4e9a0decf89e98422c2d76ab6e5f736792a388c56c7';\nconst limitOrderTypedData: EIP712TypedData = {\n    // ...\n};\n\nconst web3Provider = new Web3('...');\nconst privateKeyProviderConnector = new PrivateKeyProviderConnector(\n    privateKey,\n    web3Provider\n);\n\nconst signature = await privateKeyProviderConnector.signTypedData(\n    walletAddress,\n    limitOrderTypedData\n);\n")))}p.isMDXComponent=!0}}]);